model{
  
  for(i in 1:n_obs){
    # Simulate for comparison with data
    y_sim[i] ~ dnorm(mu[i], tau)
    
    y[i] ~ dnorm(mu[i], tau)
    mu[i] <- 
      b0[species_n[i]] +                # varying intercept 
      b1[species_n[i]]*mass[i] +        # varying mass-exponent
      b2[species_n[i]]*temp[i] +        # varying activation energy
      b3[species_n[i]]*mass[i]*temp[i]  # varying M*T interaction
  # Add log likelihood computation for each observation
  pd[i] <- dnorm(y[i], mu[i], tau)
  
  # Calculates the log PPD
  log_pd[i] <- log(dnorm(y[i], mu[i], tau))
  }
  
  # Second level (species-level effects)
  for(j in 1:max(species_n)){
    b0[j] ~ dnorm(mu_b0, tau_b0)
    b1[j] ~ dnorm(mu_b1, tau_b1)
    b2[j] ~ dnorm(mu_b2, tau_b2)
    b3[j] ~ dnorm(mu_b3, tau_b3)
  }
  
  # Predictions
  for(k in 1:length(mass_pred_met)){
      
    pred_warm[k] <- mu_b0 + mu_b1*mass_pred_met[k] + mu_b2*-1 + mu_b3*mass_pred_met[k]*-1
    pred_cold[k] <- mu_b0 + mu_b1*mass_pred_met[k] + mu_b2*0 + mu_b3*mass_pred_met[k]*0
    
  } 

  # Model fit
  mean_y <- mean(y[])
  mean_y_sim <- mean(y_sim[])
  p_mean <- step(mean_y_sim - mean_y) # Proportion of data above and below 
  
  cv_y <- sd(y[])/mean(y[])
  cv_y_sim <- sd(y_sim[])/max(0.0000001, mean(y_sim[])) # Not to divide by 0
  p_cv <- step(cv_y_sim - cv_y)

  #-- Priors	
  mu_b0 ~ dnorm(0, 0.5)      # varying intercept
  mu_b1 ~ dnorm(-0.25, 0.5)  # varying mass-exponent
  mu_b2 ~ dnorm(-0.6, 0.5)   # varying activation energy
  mu_b3 ~ dnorm(0, 0.5)      # varying interaction
  sigma ~ dunif(0, 10) 
  sigma_b0 ~ dunif(0, 10)
  sigma_b1 ~ dunif(0, 10)
  sigma_b2 ~ dunif(0, 10)
  sigma_b3 ~ dunif(0, 10)
  tau <- 1/sigma^2
  tau_b0 <- 1/sigma_b0^2
  tau_b1 <- 1/sigma_b1^2
  tau_b2 <- 1/sigma_b2^2
  tau_b3 <- 1/sigma_b3^2
  
  }
